service: viewfinder-vpc-service

provider:
  name: aws
  runtime: python3.6
  stage: "dev"
  region: "eu-north-1"
  deploymentBucket: "vf-deploy"
  environment:
    VpcCIDR: "172.17.0.0/16"
    PublicSubnetACIDR: "172.17.10.0/24"
    PublicSubnetBCIDR: "172.17.11.0/24"

resources:
  Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: "${self:provider.environment.VpcCIDR}"
        EnableDnsSupport: True
        EnableDnsHostnames: True
        Tags:
        - Key: Name
          Value: "viewfinder-VPC-${self:provider.stage}"

    PublicSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone:
          Fn::Select:
            - 0
            - Fn::GetAZs: ''
        CidrBlock: "${self:provider.environment.PublicSubnetACIDR}"
        MapPublicIpOnLaunch: True
        Tags:
        - Key: Name
          Value: "${self:provider.stage} Public Subnet (AZ1)"
        VpcId:
          Ref: VPC

    PublicSubnetB:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone:
          Fn::Select:
            - 1
            - Fn::GetAZs: ''
        CidrBlock: "${self:provider.environment.PublicSubnetBCIDR}"
        MapPublicIpOnLaunch: True
        Tags:
        - Key: Name
          Value: "${self:provider.stage} Public Subnet (AZ2)"
        VpcId:
          Ref: VPC

    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: Name
          Value: "Viewfinder-IGW-${self:provider.stage}"

    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId:
          Ref: InternetGateway
        VpcId:
          Ref: VPC

    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: VPC
        Tags:
        - Key: Name
          Value: "Public Routes-${self:provider.stage}"

    PublicSubnetARouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        SubnetId:
          Ref: PublicSubnetA

    PublicSubnetBRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        SubnetId:
          Ref: PublicSubnetB

    DefaultPublicRoute:
      Type: AWS::EC2::Route
      DependsOn: InternetGatewayAttachment
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId:
          Ref: InternetGateway

  Outputs:
    VPC:
      Description: A reference to the Viewfinder VPC
      Value:
        Ref: VPC
      Export:
        Name: "Viewfinder-VPC-${self:provider.stage}"
    SmartcareDefaultSG:
      Description: The default security group for the Viewfinder VPC.
      Value:
        Fn::GetAtt: [VPC, DefaultSecurityGroup]
      Export:
        Name: "Viewfinder-Default-SG-${self:provider.stage}"
    Subnets:
      Description: Reference to all subnets
      Value:
        Fn::Join:
          - ","
          - - Ref: PublicSubnetA
            - Ref: PublicSubnetB
      Export:
        Name: "Viewfinder-Subnets-${self:provider.stage}"